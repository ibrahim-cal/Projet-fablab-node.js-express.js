// stratégie locale. Permet de determiner si username ET password
 // correspondent à un utilisateur. Sinon, on va renvoyer message erreur
  new LocalStrategy(async (email, password, done) => {
    try {
      const user = await Utilisateur.findOne({where: {email : email}});
      // on va comparer : email reçu avec les email qu'on a en BDD
      
      if (user) {// si l'email existe, on va alors aller comparer le mdp
         
          const isValid = bcrypt.compareSync(password,user.passwordHash);
          // on va utiliser un outil de bcrypt pour la comparaison des 2 mdp
          if(isValid){
        done(null, user);
      }else{
        // si email/mdp incorrect, on renvoie un message erreur
        return done(null, false, { message: "Email ou mot de passe incorrect" });
      }
     } else {
       // si email/mdp incorrect, on renvoie un message erreur
        return done(null, false, { message: "Email ou mot de passe incorrect" });
      }
    } catch (error) {
      done(error);
    }
  })
);